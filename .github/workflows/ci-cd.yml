name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: threatdetection_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 24
      uses: actions/setup-java@v3
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run tests
      run: mvn test

    - name: Generate JaCoCo report
      run: mvn jacoco:report

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: target/site/jacoco/

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 24
      uses: actions/setup-java@v3
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven

    - name: Run OWASP Dependency Check
      run: mvn org.owasp:dependency-check-maven:check

    - name: Upload vulnerability report
      uses: actions/upload-artifact@v3
      with:
        name: vulnerability-report
        path: target/dependency-check-report.html

  deploy-dev:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 24
      uses: actions/setup-java@v3
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven

    - name: Package application
      run: mvn -B package -DskipTests --file pom.xml

    - name: Deploy to Dev Environment
      run: echo "Deploying to development environment"
      # Add your deployment script here

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    environment: production
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 24
      uses: actions/setup-java@v3
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven

    - name: Package application
      run: mvn -B package -DskipTests --file pom.xml

    - name: Deploy to Production
      run: echo "Deploying to production environment"
      # Add your deployment script here
