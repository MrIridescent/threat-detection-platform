version: '3.8'

services:
  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: threatdetection-app
    restart: always
    depends_on:
      - postgres
      - redis
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/threatdetection
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - JAVA_TOOL_OPTIONS=-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0
    volumes:
      - ./logs:/app/logs
    networks:
      - threatdetection-network

  # Database service
  postgres:
    image: postgres:14-alpine
    container_name: threatdetection-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=threatdetection
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - threatdetection-network

  # Cache service
  redis:
    image: redis:7-alpine
    container_name: threatdetection-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - threatdetection-network

  # Monitoring services
  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: threatdetection-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - threatdetection-network

  grafana:
    image: grafana/grafana:9.5.1
    container_name: threatdetection-grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    networks:
      - threatdetection-network

  # Tracing service
  zipkin:
    image: openzipkin/zipkin:2.24
    container_name: threatdetection-zipkin
    restart: always
    ports:
      - "9411:9411"
    networks:
      - threatdetection-network

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  threatdetection-network:
    driver: bridge
